{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

<article class="node_noticias_y_opinion">

  {# <div class="container-fluid  main_slider field_slider">
    {{ content.field_slider }}
  </div> #}

  <div class="container">

    <div class="row">

      <div class="col-sm-12">
        <h1>{{ label }}</h1>
      </div>

    </div>

  </div>

  <hr>

  {% set category_count = 0 %}
{% if node.field_noticias.value %}{% set category_count = category_count + 1 %}{% endif %}
{% if node.field_opinion.value %}{% set category_count = category_count + 1 %}{% endif %}
{% if node.field_medios.value %}{% set category_count = category_count + 1 %}{% endif %}
{% if node.field_videos.value %}{% set category_count = category_count + 1 %}{% endif %}
{% set col_size = 12 / category_count %}

    {{ attach_library('bootstrap/brokable_tabs') }}
  <div id="tabs-{{ node.id() }}" class="list-tabs" >
      <!-- __________________________ lista de índices ________-__________________ -->
    <div class="container">
      <div class="row">

        {% if node.field_noticias.value %}
          <ul class="row tab_index_list">
            <li target-tab="1" class=" col-md-{{ col_size }} tab_index active " parent-tab="tabs-{{ node.id() }}" >
              <div class="icon-card">
                <img class="icon-card-img" src="/libraries/brokable/assets/icons/Iconos-10.png">
                <div class="h3"> Noticias </div>
              </div>
            </li>
          {% endif %}


          {% if node.field_opinion.value %}
            <li target-tab="2" class=" col-md-{{ col_size }} tab_index " parent-tab="tabs-{{ node.id() }}">
              <div class="icon-card">
                <img class="icon-card-img" src="/libraries/brokable/assets/icons/Iconos-24.png">
                <div class="h3"> Opinión </div>
              </div>
            </li>
          {% endif %}


          {% if node.field_medios.value %}
            <li target-tab="3" class=" col-md-{{ col_size }} tab_index " parent-tab="tabs-{{ node.id() }}">
              <div class="icon-card">
                <img class="icon-card-img" src="/libraries/brokable/assets/icons/Iconos-12.png">
                <div class="h3"> PR & Medios</div>
              </div>
            </li>
          {% endif %}


          {% if node.field_videos.value %}
            <li target-tab="4" class=" col-md-{{ col_size }} tab_index " parent-tab="tabs-{{ node.id() }}">
              <div class="icon-card">
                <img class="icon-card-img" src="/libraries/brokable/assets/icons/Iconos-13.png">
                <div class="h3"> Videos </div>
              </div>
            </li>
          {% endif %}

        </ul>
      </div>
    </div>

    <hr>

      <!-- _________________________ lista de contenidos _________________________ -->
    <div class="container background-gris1">
      <div class="row">
        <ul class="tab_content_list">

          {% if node.field_noticias.value %}
            <li
              target-tab="1"
              class="tab_target active"
              parent-tab="tabs-{{ node.id() }}"
            > {{ articulos_noticias_view }} </li>
          {% endif %}

          {% if node.field_opinion.value %}
            <li
              target-tab="2"
              class="tab_target"
              parent-tab="tabs-{{ node.id() }}"
            > {{ articulos_opinion_view }} </li>
          {% endif %}

          {% if node.field_medios.value %}
            <li
              target-tab="3"
              class="tab_target"
              parent-tab="tabs-{{ node.id() }}"
            > {{ articulos_medios_view }} </li>
          {% endif %}

          {% if node.field_videos.value %}
            <li
              target-tab="4"
              class="tab_target"
              parent-tab="tabs-{{ node.id() }}"
            > {{ articulos_videos_view }} </li>
          {% endif %}

        </ul>
      </div>
    </div>
  </div>

</article>
